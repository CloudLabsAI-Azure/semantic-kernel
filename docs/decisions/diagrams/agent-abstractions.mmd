classDiagram

    Agent --> AgentChannel
    class Agent {
        <<Abstract>>        
        +String Id
        +String? Name
        +String? Description
        ~#IEnumerable~String GetChannelKeys()*
        ~#Task~AgentChannel~ CreateChannelAsync()*
    }

    Agent <|-- KernelAgent
    class KernelAgent {
        <<Abstract>>
        +String? Instructions
        +Kernel Kernel
    }

    class IChatHistoryHandler {
        <<Interface>>
        +IAsyncEnumerable<ChatMessageContent> InvokeAsync(IReadOnlyList~ChatMessageContent history)*
    }

    KernelAgent <|-- ChatHistoryKernelAgent
    IChatHistoryHandler <|-- ChatHistoryKernelAgent
    ChatHistoryKernelAgent --> ChatHistoryChannel
    class ChatHistoryKernelAgent {
        <<Abstract>>
        ~#IEnumerable~String GetChannelKeys()
        ~#Task~AgentChannel~ CreateChannelAsync()
        +IAsyncEnumerable<ChatMessageContent> InvokeAsync(IReadOnlyList~ChatMessageContent history)*
    }

    class AgentChannel {
        <<Abstract>>
        ~#IAsyncEnumerable~ChatMessageContent~ InvokeAsync(Agent agent, ChatMessageContent? input = null)*
        ~#IAsyncEnumerable<ChatMessageContent> GetHistoryAsync()*
        ~#Task ReceiveAsync(IEnumerable<ChatMessageContent> history)*
    }

    AgentChannel <|-- ChatHistoryChannel
    class ChatHistoryChannel {
        <<Final>>
        -ChatHistory _history
        ~#IAsyncEnumerable~ChatMessageContent~ InvokeAsync(Agent agent)
        ~#IAsyncEnumerable~ChatMessageContent~ GetHistoryAsync()
        ~#Task ReceiveAsync(IReadOnlyList<ChatMessageContent> history)
    }

    AgentChat o-- AgentChannel
    class AgentChat {
        <<Abstract>>
        -Dictionary~Type, AgentChannel~ _agentChannels
        ~ChatHistory History
        +IAsyncEnumerable~ChatMessageContent~ GetHistoryAsync(Agent? agent = null)
        #IAsyncEnumerable~ChatMessageContent~ InvokeAgentAsync(Agent agent, ChatMessageContent? input = null)
        -Task~AgentChannel~ GetChannelAsync(Agent agent)
    }

